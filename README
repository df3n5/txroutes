Provides routes-like dispatching for twisted.web.server.

Frequently, it's much easier to describe your website layout using routes
instead of Resource from twisted.web.resource. This small library lets you
dispatch with routes in your twisted.web application.


Usage:

    from twisted.internet import reactor
    from twisted.web.server import Site

    # Create a Controller
    class Controller(object):

        def index(self, request):
            return '<html><body>Hello World!</body></html>'

        def docs(self, request):
            return '<html><body>Docs!</body></html>'

    c = Controller()

    dispatcher = Dispatcher()
    dispatcher.connect(name='index', route='/', controller=c, action='index')
    dispatcher.connect(name='docs', route='/docs/{item}', controller=c,
            action='docs')

    factory = Site(dispatcher)
    reactor.listenTCP(8000, factory)
    reactor.run()


Helpful background information:
- Python routes: http://routes.groovie.org/
- Using twisted.web.resources: http://twistedmatrix.com/documents/current/web/howto/web-in-60/dynamic-dispatch.html


Todo:
- Support dispatching based on HTTP verbs (GET, POST, etc.)
- Support wildcard routes variables getting passed into contoller's handlers
